1. Actualizar el sistema
Primero, abre una terminal y asegúrate de que el sistema esté actualizado:

bash
Copiar código
sudo apt update
sudo apt upgrade
2. Instalar Apache
Apache es el servidor web que ejecutará el código PHP:

bash
Copiar código
sudo apt install apache2 -y
Después de la instalación, verifica que Apache esté funcionando abriendo un navegador e ingresando http://localhost o http://127.0.0.1. Deberías ver la página de bienvenida de Apache.

3. Instalar PHP
A continuación, instala PHP junto con algunos módulos comunes:

bash
Copiar código
sudo apt install php libapache2-mod-php php-mysql -y
Para verificar que PHP se haya instalado correctamente, crea un archivo de prueba:

bash
Copiar código
echo "<?php phpinfo(); ?>" | sudo tee /var/www/html/info.php
Luego, abre http://localhost/info.php en el navegador. Deberías ver la página de configuración de PHP. Elimina este archivo cuando ya no lo necesites, ya que puede exponer información sensible:

bash
Copiar código
sudo rm /var/www/html/info.php
4. Instalar MySQL
Instala MySQL Server para manejar bases de datos:

bash
Copiar código
sudo apt install mysql-server -y
Cuando termine la instalación, ejecuta el siguiente comando para configurar la seguridad de MySQL:

bash
Copiar código
sudo mysql_secure_installation
Aquí podrás configurar una contraseña para el usuario root de MySQL y asegurar la instalación siguiendo las indicaciones en pantalla.

5. Instalar phpMyAdmin
Instala phpMyAdmin para gestionar MySQL desde una interfaz web:

bash
Copiar código
sudo apt install phpmyadmin -y
Durante la instalación:

Selecciona Apache2 cuando se te pregunte el servidor.
Acepta la configuración de la base de datos con dbconfig-common.
Configura una contraseña para el usuario phpmyadmin en MySQL o déjalo en blanco para que se genere automáticamente.
6. Configurar phpMyAdmin
Para que phpMyAdmin esté accesible desde el navegador, añade un enlace simbólico a la carpeta de Apache:

bash
Copiar código
sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin
Luego, reinicia Apache para aplicar los cambios:

bash
Copiar código
sudo systemctl restart apache2
7. Acceder a phpMyAdmin
Abre http://localhost/phpmyadmin en el navegador. Inicia sesión con el usuario root de MySQL y la contraseña que configuraste durante la instalación de mysql_secure_installation.

Resumen de Comandos
Aquí está la lista rápida de comandos utilizados:

bash
Copiar código
sudo apt update
sudo apt upgrade
sudo apt install apache2 -y
sudo apt install php libapache2-mod-php php-mysql -y
echo "<?php phpinfo(); ?>" | sudo tee /var/www/html/info.php
sudo rm /var/www/html/info.php
sudo apt install mysql-server -y
sudo mysql_secure_installation
sudo apt install phpmyadmin -y
sudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadmin
sudo systemctl restart apache2


PARA EJECUTAR UN ACHIVO MYSQL SEGUIDAMENTE ES NECESARIO:

Para ejecutar un archivo SQL desde la consola en MySQL en Ubuntu, necesitarás lo siguiente:

1. Tener MySQL instalado
Asegúrate de tener MySQL Server instalado en tu sistema. Si no está instalado, puedes hacerlo con el siguiente comando:

bash
Copiar código
sudo apt install mysql-server -y
2. Un archivo SQL listo para ejecutar
Prepara el archivo SQL que quieres ejecutar. Supongamos que tu archivo se llama script.sql y se encuentra en el directorio actual o en una ubicación conocida.

3. Acceso a MySQL desde la terminal
Para ejecutar el archivo SQL, necesitarás acceso a MySQL desde la terminal. También necesitas el nombre de usuario y contraseña de un usuario MySQL con permisos suficientes (como el usuario root).

Pasos para ejecutar el archivo SQL desde la consola
Abrir la terminal.

Ejecutar el archivo SQL con el siguiente comando:

bash
Copiar código
mysql -u usuario -p nombre_base_de_datos < /ruta/al/archivo/script.sql
usuario: Reemplaza esto con el nombre de usuario de MySQL (por ejemplo, root).
nombre_base_de_datos: El nombre de la base de datos en la que quieres ejecutar el archivo SQL.
/ruta/al/archivo/script.sql: La ruta completa al archivo SQL.
Ejemplo:

bash
Copiar código
mysql -u root -p mi_base_de_datos < /home/usuario/script.sql
Ingresa la contraseña cuando se te pida. Esto es necesario si el usuario de MySQL tiene una contraseña configurada.

Ejemplo Completo
Si tienes un archivo llamado script.sql en tu carpeta personal (/home/usuario/script.sql) y deseas ejecutarlo en una base de datos llamada mi_base_de_datos, utiliza el siguiente comando:

bash
Copiar código
mysql -u root -p mi_base_de_datos < /home/usuario/script.sql
Después de ingresar la contraseña, MySQL ejecutará las instrucciones SQL contenidas en script.sql en la base de datos mi_base_de_datos.

Nota
Si el archivo SQL contiene la creación de una base de datos o usa múltiples bases de datos, omite nombre_base_de_datos en el comando:

bash
Copiar código
mysql -u root -p < /home/usuario/script.sql
Con estos pasos, deberías poder ejecutar un archivo SQL desde la consola en MySQL en Ubuntu.
